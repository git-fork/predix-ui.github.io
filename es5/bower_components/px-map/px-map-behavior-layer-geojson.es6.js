(function(){'use strict';window.PxMapBehavior=window.PxMapBehavior||{},PxMapBehavior.GeoJSONLayerImpl={properties:{data:{type:Object,observer:'shouldUpdateInst'},featureStyle:{type:Object,observer:'shouldUpdateInst'},showFeatureProperties:{type:Boolean,value:!1,observer:'shouldUpdateInst'}},update:function(){this.elementInst&&this.shouldUpdateInst()},canAddInst:function(){return this.data&&'object'===babelHelpers.typeof(this.data)&&Object.keys(this.data).length},addInst:function(a){var b=this,c=this._handleFeatureAdded.bind(this),d=this._handleFeatureRemoved.bind(this);this.bindEvents({layeradd:c,layerremove:d}),0!==this.elementInst.getLayers().length&&this.elementInst.eachLayer(function(a){b.elementInst.fire('layeradd',{layer:a})}),PxMapBehavior.LayerImpl.addInst.call(this,a)},createInst:function(a){var b=this,c=this.getInstOptions().featureStyle,d=L.geoJson(a.data,{pointToLayer:function(c,d){var e=c.properties.style||{},f=a.featureStyle,g=b._getStyle(c,e,f);return new L.CircleMarker(d,g)},onEachFeature:function(a,c){b.showFeatureProperties&&b._bindPopup(a,c)},style:function(a){var d=a.properties.style||{};return b._getStyle(d,c)}});return d},_getStyle:function(a,b){return{radius:a.radius||b.radius||5,color:a.color||b.color||'#3E87E8',fillColor:a.fillColor||b.fillColor||'#88BDE6',weight:a.weight||b.weight||2,opacity:a.opacity||b.opacity||1,fillOpacity:a.fillOpacity||b.fillOpacity||0.4}},_bindFeaturePopups:function(){var a=this;this.elementInst&&this.elementInst.eachLayer(function(b){return a._bindPopup(b.feature,b)})},_bindPopup:function(a,b){var c=Object.keys(a.properties).filter(function(b){return a.properties.hasOwnProperty(b)&&'unset'!==a.properties[b]&&'style'!==b});if(c.length){var d=c.reduce(function(b,c){return b[c]=a.properties[c],b},{}),e=new PxMap.DataPopup({title:'Feature Properties',data:d,autoPanPadding:[1,1]});b.bindPopup(e)}},_unbindFeaturePopups:function(){var a=this;this.elementInst&&this.elementInst.eachLayer(function(b){return a._unbindPopup(b)})},_unbindPopup:function(a){'undefined'!==typeof a.getPopup()&&a.unbindPopup()},updateInst:function(a,b){var c=this;if(!Object.keys(b.data).length)this.elementInst.clearLayers();else if(Object.keys(b.data).length&&(a.dataHash!==b.dataHash||a.featureStyleHash!==b.featureStyleHash)){var d=this.getInstOptions().featureStyle;this.elementInst.clearLayers(),this.elementInst.options.style=function(a){var b=a.properties.style||{};return c._getStyle(b,d)},this.elementInst.addData(b.data),b.showFeatureProperties&&this._bindFeaturePopups()}else a.showFeatureProperties!==b.showFeatureProperties&&(b.showFeatureProperties&&this._bindFeaturePopups(),b.showFeatureProperties||this._unbindFeaturePopups())},getInstOptions:function(){return{data:this.data||{},dataHash:JSON.stringify(this.data||{}),featureStyle:this.featureStyle||{},featureStyleHash:JSON.stringify(this.featureStyle||{}),showFeatureProperties:this.showFeatureProperties}},_handleFeatureAdded:function(a){if(a&&a.layer){a.layer.on('click',this._handleFeatureTapped.bind(this)),a.layer.on('popupopen',this._handleFeaturePopupOpened.bind(this)),a.layer.on('popupclose',this._handleFeaturePopupClosed.bind(this));var b={};a.layer&&a.layer.feature&&(b.feature=a.layer.feature),this.fire('px-map-layer-geojson-feature-added',b)}},_handleFeatureRemoved:function(a){if(a&&a.layer){a.layer.off();var b={};a.layer&&a.layer.feature&&(b.feature=a.layer.feature),this.fire('px-map-layer-geojson-feature-removed',b)}},_handleFeatureTapped:function(a){var b={};a.target&&a.target.feature&&(b.feature=a.target.feature),this.fire('px-map-layer-geojson-feature-tapped',b)},_handleFeaturePopupOpened:function(a){var b={};a.target&&a.target.feature&&(b.feature=a.target.feature),this.fire('px-map-layer-geojson-feature-popup-opened',b)},_handleFeaturePopupClosed:function(a){var b={};a.target&&a.target.feature&&(b.feature=a.target.feature),this.fire('px-map-layer-geojson-feature-popup-closed',b)}},PxMapBehavior.GeoJSONLayer=[PxMapBehavior.Layer,PxMapBehavior.GeoJSONLayerImpl]})();