(function(){'use strict';window.PxMapBehavior=window.PxMapBehavior||{},PxMapBehavior.MarkerGroupImpl={properties:{name:{type:String,notify:!0},data:{type:Object,observer:'shouldUpdateInst'},_colorsByType:{type:Object,value:function(){return{}}},colorsByType:{type:Object,value:function(){return{}},observer:'_calculateColorsByType'},iconFns:{type:Object,value:function(){return{cluster:void 0,marker:void 0}}},clusterConfig:{type:Object}},update:function(){if(this.elementInst){var a=this.getInstOptions(),b=a.data,c=this._syncDataWithMarkers(b.features,this.elementInst);this._notifyNewFeatures(c)}},redraw:function(){this.elementInst&&(this._clearAllMarkersAndData(this.elementInst),this.update())},addInst:function(a){var b=this._handleClusterSpiderify.bind(this),c=this._handleClusterUnspiderify.bind(this),d=this._handleSingleMarkerTap.bind(this),e=this._handleSingleMarkerDoubleClick.bind(this),f=this._handleClusterTap.bind(this);this.bindEvents({spiderfied:b,unspiderfied:c,click:d,dblclick:e,clusterclick:f}),PxMapBehavior.LayerImpl.addInst.call(this,a),this.async(function(){this.fire('px-map-marker-group-added')})},removeInst:function(a){PxMapBehavior.LayerImpl.removeInst.call(this,a)},createInst:function(){var a=0<arguments.length&&arguments[0]!==void 0?arguments[0]:{},b=L.markerClusterGroup(a);if(a.data){var c=this._syncDataWithMarkers(a.data.features,b);this._notifyNewFeatures(c)}return b},updateInst:function(a,b){if(b.data){var c=this._syncDataWithMarkers(b.data.features,this.elementInst);this._notifyNewFeatures(c)}},getInstOptions:function(){var a={showCoverageOnHover:!0,maxClusterRadius:150,spiderifyOnMaxZoom:!0,removeOutsideVisibleBounds:!0,animate:!0,polygonOptions:{stroke:!0,color:this.getComputedStyleValue('--internal-px-map-marker-group-cluster-polygon-stroke-color'),fillColor:this.getComputedStyleValue('--internal-px-map-marker-group-cluster-polygon-fill-color'),fillOpacity:0.4}},b=Object.assign(a,this.clusterConfig||{});return b.data=this._getValidData(),b.iconCreateFunction=this._createClusterIcon.bind(this),b},_notifyNewFeatures:function(a){a&&a instanceof Set&&a.size&&this.async(function(){var b,c,d=L.latLngBounds(),e=!0,f=!1;try{for(var g,h=a[Symbol.iterator]();!(e=(g=h.next()).done);e=!0)b=g.value,d.extend([b.geometry.coordinates[1],b.geometry.coordinates[0]])}catch(a){f=!0,c=a}finally{try{!e&&h.return&&h.return()}finally{if(f)throw c}}this.fire('px-map-marker-group-features-changed',{bounds:d})},1)},_getValidData:function(){if(this.data){var a='object'!==babelHelpers.typeof(this.data)||'FeatureCollection'!==this.data.type||!Array.isArray(this.data.features)||!this.data.features.length||'object'!==babelHelpers.typeof(this.data.features[0]);return a?void console.log('PX-MAP CONFIGURATION ERROR:\n          The `data` attribute for '+this.is+' is not valid GeoJSON. Valid GeoJSON\n          that follows the FeatureCollection standard is required to draw the\n          marker clusters. See the GeoJSON spec website (http://geojson.org/geojson-spec.html)\n          for more information on what is required.\n\n          The minimum requirements for '+this.is+' are:\n          - Must be a valid JavaScript object (or deserializable to an object)\n          - Must have key `type` with value \'FeatureCollection\'\n          - Must have key `features` with value of an array with length\n          - Each entry in `features` must be a valid object\n        '):this.data}},created:function(){var a=this.updateStyles;this.updateStyles=this._handleStylesUpdated.bind(this),this._updateStylesFn=a},_handleStylesUpdated:function(){this._updateStylesFn(),this._calculateColorsByType(this.colorsByType)},_createClusterIcon:function(a){if(this.iconFns.cluster)return this.iconFns.cluster.call(this,a);var b=a.getAllChildMarkers(),c=b.length,d=this._indexClusterMarkersByType(b),e=this._colorsByType,f=this._getClusterIconSize(c),g=this._getStyleValueAsNum('--internal-px-map-marker-group-cluster-path-size')||10,h=this._getStyleValueAsNum('--internal-px-map-marker-group-cluster-border-size')||0,i={count:c,countByType:d,colorsByType:e,containerSize:f,pathSize:g,borderSize:h,styleScope:this.isShadyScoped()?this.getShadyScope():void 0};return new PxMap.ClusterIcon(i)},_calculateColorsByType:function(a){var b=Object.assign({},this._getAllIconColors(),a||{}),c=JSON.stringify(this._colorsByType);JSON.stringify(b)!==c&&(this._colorsByType=b,'{}'!==c&&this.redraw())},_getAllIconColors:function(){for(var a={info:this.getComputedStyleValue('--internal-px-map-icon-info-color'),warning:this.getComputedStyleValue('--internal-px-map-icon-warning-color'),important:this.getComputedStyleValue('--internal-px-map-icon-important-color'),unknown:this.getComputedStyleValue('--internal-px-map-icon-unknown-color')},b=void 0,c=0;101>c&&(b=this.getComputedStyleValue('--px-map-color-custom-'+c),b&&''!==b);c++)a['custom-'+c]=b;return a},_getStyleValueAsNum:function(a){if(this.__styleVals=this.__styleVals||{},this.__styleVals[a])return this.__styleVals[a];var b=this.getComputedStyleValue(a);if(b&&-1!==b.indexOf('px')){var c=b.replace('px',''),d=Math.floor(c);return this.__styleVals[a]=d,d}},_getClusterIconSize:function(a){return 10>a?60:10<=a&&40>a?75:40<a?90:void 0},_indexClusterMarkersByType:function(a){return a.reduce(function(a,b){return b.featureProperties&&b.featureProperties['marker-icon']&&b.featureProperties['marker-icon']['icon-type']&&(a[b.featureProperties['marker-icon']['icon-type']]=(a[b.featureProperties['marker-icon']['icon-type']]||0)+1),a},{})},_clearAllMarkersAndData:function(a){a.clearLayers(),this._features=null,this._markers=null},_syncDataWithMarkers:function(a,b){if(a.length){var c,d,e,f=this._features=this._features||new Set,g=this._markers=this._markers||new WeakMap,h=this._diffNewFeatures(a,f,g),i=h.featuresToAdd,j=h.featuresToUpdate,k=h.featuresToRemove,l=h.nextFeaturesSet,m=h.nextMarkersMap;if(i.size){e=[];var n,o=!0,p=!1;try{for(var q,r=i[Symbol.iterator]();!(o=(q=r.next()).done);o=!0)c=q.value,d=m.get(c),d.marker=this._createMarker(c),e.push(d.marker),m.set(c,d)}catch(a){p=!0,n=a}finally{try{!o&&r.return&&r.return()}finally{if(p)throw n}}b.addLayers(e),e=null}if(j.size){e=[];var s,t=!0,u=!1;try{for(var v,w=j[Symbol.iterator]();!(t=(v=w.next()).done);t=!0)c=v.value,d=m.get(c),d.marker=this._updateMarker(c,d.marker),e.push(d.marker),m.set(c,d)}catch(a){u=!0,s=a}finally{try{!t&&w.return&&w.return()}finally{if(u)throw s}}b.refreshClusters(e),e=null}if(k.size){e=[];var x,y=!0,z=!1;try{for(var A,B=k[Symbol.iterator]();!(y=(A=B.next()).done);y=!0)c=A.value,d=m.get(c),e.push(d.marker),m.delete(c)}catch(a){z=!0,x=a}finally{try{!y&&B.return&&B.return()}finally{if(z)throw x}}b.removeLayers(e),e=null}return this._features=l,this._markers=m,f.clear(),i.clear(),j.clear(),k.clear(),this._features}},_diffNewFeatures:function(a,b,c){var d,e,f,g,h,i,j=new Set,k=new Set,l=new Set;for(d=0,e=a.length;d<e;d++)if(f=a[d].id&&a[d].geometry&&'Point'===a[d].geometry.type&&a[d].geometry.coordinates instanceof Array&&2===a[d].geometry.coordinates.length,f){if(g=b.has(a[d]),!g){k.add(a[d]),b.delete(a[d]),j.add(a[d]),h={marker:null,hash:JSON.stringify(a[d])},c.set(a[d],h);continue}g&&(h=c.get(a[d]),i=JSON.stringify(a[d]),h.hash!==i&&(l.add(a[d]),h.hash=i,c.set(a[d],h)),b.delete(a[d]),j.add(a[d]))}var m=b.size?b:new Set;return b=null,{featuresToAdd:k,featuresToUpdate:l,featuresToRemove:m,nextFeaturesSet:j,nextMarkersMap:c}},_createMarker:function(a){var b=babelHelpers.slicedToArray(a.geometry.coordinates,2),c=b[0],d=b[1],e=L.marker([d,c]),f=a.properties['marker-icon']?this._extractMarkerIconSettings(a.properties['marker-icon']):{};f.base=f.base||'static-icon',f.type=f.type||'info',f.color=this._colorsByType[f.type]||'black';var g=this._createMarkerIcon(f);return e.setIcon(g),e.featureProperties=a.properties,e},_updateMarker:function(a,b){var c=b.getLatLng(),d=c.lat,e=c.lng,f=babelHelpers.slicedToArray(a.geometry.coordinates,2),g=f[0],h=f[1];(d!==+h||e!==+g)&&b.setLatLng([h,g]);var i=a.properties['marker-icon']?this._extractMarkerIconSettings(a.properties['marker-icon']):{};i.base=i.base||'static-icon',i.type=i.type||'info';var j=this._createMarkerIcon(i);return b.setIcon(j),b.featureProperties=a.properties,b},_extractMarkerIconSettings:function(a){var b=Object.keys(a);if(b.length){var c,d,e,f={};for(c=0,d=b.length;c<d;c++)'icon-'===b[c].substring(0,5)&&(e=b[c].substring(5).replace(/(\-[a-z])/g,function(a){return a.charAt(1).toUpperCase()}),f[e]=a[b[c]]);return f}},_createMarkerIcon:function(a){if(this.iconFns.marker)return this.iconFns.marker.call(this,a);a.styleScope=this.isShadyScoped()?this.getShadyScope():void 0;var b=this._strToKlassName(a.base);return new PxMap[b](a)},_strToKlassName:function(a){return a.charAt(0).toUpperCase()+a.substring(1).replace(/(\-[a-z])/g,function(a){return a.charAt(1).toUpperCase()})},_handleClusterSpiderify:function(a){a&&a.cluster&&a.cluster._icon&&(a.cluster._icon.style.visibility='hidden')},_handleClusterUnspiderify:function(a){a&&a.cluster&&a.cluster._icon&&(a.cluster._icon.style.visibility='visible')},_handleSingleMarkerTap:function(a){if(a.layer&&a.layer.getLatLng()instanceof L.LatLng){var b=L.latLng(a.layer.getLatLng()),c=b.lat,d=b.lng,e={latLng:b,lat:c,lng:d,feature:a.layer.featureProperties?a.layer.featureProperties:void 0};this.fire('px-map-marker-group-marker-tapped',e)}a.layer&&a.layer.featureProperties&&a.layer.featureProperties.hasOwnProperty('marker-popup')&&this._bindAndOpenPopup(a.layer)},_handleSingleMarkerDoubleClick:function(a){var b=L.latLng(a.layer.getLatLng()),c=b.lat,d=b.lng,e={latLng:b,lat:c,lng:d,feature:a.layer.featureProperties?a.layer.featureProperties:void 0};this.fire('px-map-marker-group-marker-double-clicked',e)},_handleClusterTap:function(a){for(var b=a.layer.getBounds(),c=a.layer.getAllChildMarkers(),d=[],e=0;e<c.length;e++)d.push(c[e].featureProperties);this.fire('px-map-marker-group-cluster-tapped',{bounds:b,features:d})},_bindAndOpenPopup:function(a){if(a&&a.bindPopup&&a.openPopup){var b=this._featSettingsToProps(a.featureProperties['marker-popup'],'popup');if(b&&Object.keys(b).length){var c=b._Base&&PxMap.hasOwnProperty(b._Base)?b._Base:'InfoPopup',d=new PxMap[c](b);a.bindPopup(d).openPopup(),a.__boundCloseFn=this._unbindAndClosePopup.bind(this,a),a.on('popupclose',a.__boundCloseFn)}}},_unbindAndClosePopup:function(a){a&&a.getPopup&&a.getPopup()&&(a.off('popupclose',a.__boundCloseFn),a.__boundCloseFn=null,a.closePopup().unbindPopup())},_featSettingsToProps:function(a,b){var c=Object.keys(a);if(c.length){for(var d,e={},f=0,g=c.length;f<g;f++)if(!(b&&c[f].substr(0,b.length)!==b)){if(/^[A-Za-z]+\-base$/.test(c[f])){e._Base=this._strToKlassName(a[c[f]]);continue}d=c[f].replace(/^[A-Za-z]+\-(.*)$/,'$1'),e[d]=a[c[f]]}return e}}},PxMapBehavior.MarkerGroup=[PxMapBehavior.Layer,PxMapBehavior.MarkerGroupImpl]})();