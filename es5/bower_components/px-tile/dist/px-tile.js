'use strict';(function(){Polymer({is:'px-tile',properties:{hoverable:{type:Boolean,value:!1,observer:'_hoverableChanged'},_hovered:{type:Boolean,value:!1},mainTitle:{type:String,value:'',observer:'_onDataChanged'},subtitle:{type:String,value:'',observer:'_onDataChanged'},description:{type:String,value:'',observer:'_onDataChanged'},overlayDescription:{type:String,value:'',observer:'_onDataChanged'},actionButtons:{type:Object,value:{},observer:'_actionButtonsChanged'}},_hover:function(){this.hoverable&&(this._hovered=!this._hovered)},_hoverableChanged:function(){this.$.overlay.classList.add('overlay-remove'),this.hoverable&&(this.$.overlay.classList.remove('overlay-remove'),this._hoverTextColor=window.getComputedStyle(this.$.overlay).color)},attached:function(){this.listen(this.$.overlay,'mouseenter','_hover'),this.listen(this.$.overlay,'mouseleave','_hover')},detached:function(){this.unlisten(this.$.overlay,'mouseenter'),this.unlisten(this.$.overlay,'mouseleave')},_getClass:function(a){return a?'hovered':''},_actionButtonsChanged:function(){if(this._hasPrimaryBtn=!1,this._hasActionButtons=this.actionButtons&&this.actionButtons.items&&0<this.actionButtons.items.length,this._hasActionButtons){this.actionButtons.maxPrimaryButtons||1;for(var a in this.actionButtons.items)if(this.actionButtons.items[a].isPrimary){this._hasPrimaryBtn=!0;break}}this._onDataChanged()},_onDataChanged:function(){this._hasTitleActionBtn=this.mainTitle&&0<this.mainTitle.length||this._hasPrimaryBtn,this._hasTitleSubtitleActionBtn=this.subtitle&&0<this.subtitle.length||this._hasTitleActionBtn,this._hasData=this._hasActionButtons||this._hasTitleSubtitleActionBtn}})})();