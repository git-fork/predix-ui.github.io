(function(){'use strict';window.PxMapBehavior=window.PxMapBehavior||{},PxMapBehavior.ElementImpl={beforeRegister(){this.elementInst=null},attached(){this.__elAttached=!0},detached(){this.__elAttached=!1},notifyInstReady(a=!0){return!!a&&(this.fire('px-map-element-ready-to-add'),!0)},shouldAddInst(){if(!this.elementInst){const a=this.__initialOptions=this.getInstOptions();this.elementInst=this.createInst(a),this.fire('px-map-element-instance-created')}this.__instEvents=this.__instEvents||[],this.__instEventsElementsMap=this.__instEventsElementsMap||new WeakMap},shouldRemoveInst(){this.unbindAllEvents(this.__instEvents,this.__instEventsElementsMap),this.__instEvents=null,this.__instEventsElementsMap=null},shouldUpdateInst(){if(!this.elementInst&&this.__elAttached&&this.canAddInst()&&this.notifyInstReady(this.canAddInst()),!!this.elementInst){const a=this.__lastOptions||this.__initialOptions,b=this.getInstOptions();this.updateInst(a,b),this.__lastOptions=b}},createInst(){throw new Error('The `createInst` method must be implemented.')},updateInst(){throw new Error('The `updateInst` method must be implemented.')},getInstOptions(){throw new Error('The `getInstOptions` method must be implemented.')},addInst(){throw new Error('The `bindInst` method must be implemented.')},removeInst(){throw new Error('The `unbindInst` method must be implemented.')},extendObj(a,...b){if(!a||!(a instanceof Object))throw new Error('The first parameter of `extendObj` must be an object to be mutated.');return b.length&&Object.assign(a,...b),a},addProperties(...a){return this.properties=this.properties||{},a.length&&this.extend(this.properties,...a),this.properties},bindEvents(a,b){if('object'!==typeof a||!Object.keys(a).length)return;const c=b||this.elementInst;if(!c||!c.on)return;const d=this.__instEvents,e=this.__instEventsElementsMap;let f=Object.keys(a);f.forEach((b)=>{let f={name:b,fn:a[b]};c.on(f.name,f.fn),d.push(f),e.set(f,c)})},unbindAllEvents(a,b){a&&a.length&&b&&a.forEach((a)=>{let c=b.get(a);if(c&&c.off){let{name:d,fn:e}=a;c.off(d,e),b.delete(a)}})},isShadyScoped(){return!Polymer.Settings.useNativeShadow},getShadyScope(){return'style-scope px-map'}},PxMapBehavior.Element=[PxMapBehavior.ElementImpl]})();