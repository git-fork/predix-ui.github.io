(function(){'use strict';window.PxMapBehavior=window.PxMapBehavior||{},PxMapBehavior.ControlImpl={properties:{position:{type:String,value:'bottomright',observer:'shouldUpdateInst'}},addInst(a){this.elementInst.addTo(a)},removeInst(){this.elementInst.remove()},getInstOptions(){return{position:this._getValidPosition()}},_getValidPosition(){const a=/^(topright|topleft|bottomright|bottomleft)$/.test(this.position);return a?this.position:(console.log(`PX-MAP CONFIGURATION ERROR:
          You entered an invalid \`position\` attribute '${this.position}' for ${this.is}.
          Position must be a string with one of the following values:
          - 'topright'
          - 'topleft'
          - 'bottomright'
          - 'bottomleft'
          Defaulting to 'bottomright'.`),'bottomright')}},PxMapBehavior.Control=[PxMapBehavior.Layer,PxMapBehavior.ControlImpl],PxMapBehavior.ZoomControlImpl={properties:{language:{type:String,value:'en'},resources:{type:Object,value:function(){return{en:{"Zoom in":'Zoom in',"Zoom out":'Zoom out'}}}}},createInst(a){return new PxMap.ZoomControl(a)},updateInst(a,b){a.position!==b.position&&this.elementInst.setPosition(b.position)},getInstOptions(){const a=PxMapBehavior.ControlImpl.getInstOptions.call(this);return a.position=this.position,a.zoomInText='<px-icon icon="px-utl:add"></px-icon>',a.zoomOutText='<px-icon icon="px-utl:remove"></px-icon>','function'===typeof this.localize&&(a.zoomInTitle=this.localize('Zoom in'),a.zoomOutTitle=this.localize('Zoom out')),a}},PxMapBehavior.ZoomControl=[Polymer.AppLocalizeBehavior,PxMapBehavior.Control,PxMapBehavior.ZoomControlImpl],PxMapBehavior.ScaleControlImpl={properties:{imperialUnits:{type:Boolean,value:!1,observer:'shouldUpdateInst'},metricUnits:{type:Boolean,value:!1,observer:'shouldUpdateInst'},reverseColors:{type:Boolean,value:!1,observer:'shouldUpdateInst'}},createInst(a){return new PxMap.ScaleControl(a)},updateInst(a,b){a.position!==b.position&&this.elementInst.setPosition(b.position),a.reverseColors!==b.reverseColors&&this.elementInst.setReverseColors(b.reverseColors),a.metric!==b.metric&&this.elementInst.showMetric(b.metric),a.imperial!==b.imperial&&this.elementInst.showImperial(b.imperial)},getInstOptions(){const a=PxMapBehavior.ControlImpl.getInstOptions.call(this);return a.imperial=this.imperialUnits,a.metric=this.metricUnits,a.reverseColors=this.reverseColors,a}},PxMapBehavior.ScaleControl=[PxMapBehavior.Control,PxMapBehavior.ScaleControlImpl],PxMapBehavior.LocateControlImpl={properties:{locateTitle:{type:String,value:'Zoom to your location',observer:'shouldUpdateInst'},moveToLocation:{type:Boolean,value:!1},moveMaxZoom:{type:Number,observer:'shouldUpdateInst'},lastFoundLocation:{type:Object,value:function(){return{}},notify:!0}},addInst(a){PxMapBehavior.ControlImpl.addInst.call(this,a);const b=this._handleLocationFound.bind(this),c=this._handleLocationError.bind(this),d=this._handleLocationTap.bind(this);this.bindEvents({locationfound:b,locationerror:c,controlclick:d})},removeInst(a){PxMapBehavior.ControlImpl.removeInst.call(this,a)},createInst(a){return new PxMap.LocateControl(a)},updateInst(a,b){a.position!==b.position&&this.elementInst.setPosition(b.position),a.moveMaxZoom!==b.moveMaxZoom&&this.elementInst.setMoveMaxZoom(b.moveMaxZoom)},getInstOptions(){return{position:this.position,locateIcon:'<px-icon icon="px-vis:crosshair"></px-icon>',locateTitle:this.locateTitle,moveToLocation:this.moveToLocation,moveMaxZoom:this.moveMaxZoom}},_handleLocationFound(a){if(a){const b={lat:a.latitude||null,lng:a.longitude||null,timestamp:a.timestamp||null,bounds:a.bounds||null};b.accuracy=a.bounds.getCenter()&&a.bounds.getNorthWest()?a.bounds.getCenter().distanceTo(a.bounds.getNorthEast()):null,this.fire('px-map-control-locate-succeeded',b),this.set('lastFoundLocation',b),this.notifyPath('lastFoundLocation.*')}},_handleLocationError(a){if(a){const b={message:a.message||null};this.fire('px-map-control-locate-failed',b)}},_handleLocationTap(a){a&&'locate'===a.action&&this.fire('px-map-locate-button-tapped')}},PxMapBehavior.LocateControl=[PxMapBehavior.Control,PxMapBehavior.LocateControlImpl],window.PxMap=window.PxMap||{};class a extends L.Control.Scale{initialize(a){super.initialize(a)}onAdd(a){return this.__scaleContainer=super.onAdd(a),!0===this.options.reverseColors&&L.DomUtil.addClass(this.__scaleContainer,'leaflet-control-scale--reverse'),this.__scaleContainer}onRemove(a){super.onRemove(a),this.__scaleContainer=null}setReverseColors(a){this.__scaleContainer&&(a&&!this.options.reverseColors&&(this.options.reverseColors=!0,L.DomUtil.addClass(this.__scaleContainer,'leaflet-control-scale--reverse')),!a&&this.options.reverseColors&&(this.options.reverseColors=!1,L.DomUtil.removeClass(this.__scaleContainer,'leaflet-control-scale--reverse')))}showImperial(a){this.__scaleContainer&&(a&&!this.options.imperial&&!this._iScale&&(this._iScale=L.DomUtil.create('div','leaflet-control-scale-line',this.__scaleContainer),this.options.imperial=!0),!a&&this.options.imperial&&this._iScale&&(this.options.imperial=!1,L.DomUtil.remove(this._iScale),this._iScale=null),this._update())}showMetric(a){this.__scaleContainer&&(a&&!this.options.metric&&!this._mScale&&(this._mScale=L.DomUtil.create('div','leaflet-control-scale-line',this.__scaleContainer),this.options.metric=!0),!a&&this.options.metric&&this._mScale&&(this.options.metric=!1,L.DomUtil.remove(this._mScale),this._mScale=null),this._update())}}PxMap.ScaleControl=a;class b extends L.Control.Zoom{_zoomIn(a){super._zoomIn(a),this._map&&this._map.fire&&this._map.fire('controlclick',{src:this,action:'zoomin'})}_zoomOut(a){super._zoomOut(a),this._map&&this._map.fire&&this._map.fire('controlclick',{src:this,action:'zoomout'})}_fireZoomClickEvt(){}}PxMap.ZoomControl=b;class c extends L.Control{initialize(a={}){const b=Object.assign({position:'bottomright',className:'',locateIcon:'<px-icon icon="px-utl:location"></px-icon>',locateTitle:'Zoom to your location',locateTimeout:1e4,moveToLocation:!0,moveMaxZoom:null},a);L.Util.setOptions(this,b)}onAdd(a){return this.__container=L.DomUtil.create('div',`${'leaflet-control-locate'} leaflet-bar ${this.options.className}`),this.__locateButton=this._createButton(this.options.locateIcon,this.options.locateTitle,'leaflet-control-locate-button',this.__container),L.DomEvent.on(a,'locationfound',this._locationFound,this),L.DomEvent.on(a,'locationerror',this._locationError,this),L.DomEvent.disableClickPropagation(this.__locateButton),L.DomEvent.on(this.__locateButton,'click',L.DomEvent.stop),L.DomEvent.on(this.__locateButton,'click',this._locate,this),L.DomEvent.on(this.__locateButton,'click',this._refocusOnMap,this),this.__container}onRemove(a){L.DomEvent.off(a,'locationfound',this._locationFound,this),L.DomEvent.off(a,'locationerror',this._locationError,this),L.DomEvent.off(this.__locateButton,'click',L.DomEvent.stop),L.DomEvent.off(this.__locateButton,'click',this._locate,this),L.DomEvent.off(this.__locateButton,'click',this._refocusOnMap,this)}setMoveMaxZoom(a){'string'===typeof a&&a.length&&!isNaN(a)&&(a=parseInt(a)),'number'===typeof a&&this.options.moveMaxZoom!==a&&(this.options.moveMaxZoom=a)}on(...a){return this._map?this._map.on(...a):void 0}off(...a){return this._map?this._map.off(...a):void 0}_locate(a){this._map.fire('controlclick',{src:this,action:'locate'}),this.locate(a)}locate(){this.__locating=!0,this._map.locate({setView:this.options.moveToLocation,maxZoom:this.options.moveMaxZoom,timeout:this.options.locateTimeout}),this._setLocatingState()}reset(){this._setReadyState()}isDisabled(){return this.__disabled||!1}_createButton(a,b,c,d){const e=L.DomUtil.create('a',c,d);return e.innerHTML=a,e.href='#',e.title=b,e.setAttribute('role','button'),e.setAttribute('aria-label',b),e}_locationFound(){this.__locating&&(this.__locating=!1,this._setReadyState())}_locationError(){this.__locating&&(this.__locating=!1,this._setReadyState())}_setLocatingState(){this.__locateButton&&this.__locating&&(L.DomUtil.addClass(this.__locateButton,'leaflet-control-locate-button--locating'),this.__disabled=!0,this._updateDisabled())}_setReadyState(){!this.__locateButton||this.__locating||(this.__locateButton.innerHTML=this.options.locateIcon,L.DomUtil.removeClass(this.__locateButton,'leaflet-control-locate-button--locating'),L.DomUtil.removeClass(this.__locateButton,'leaflet-control-locate-button--error'),this.__disabled=!1,this._updateDisabled())}_updateDisabled(){this.__locateButton&&(this.__disabled&&L.DomUtil.addClass(this.__locateButton,'leaflet-control-locate-button--disabled'),!this.__disabled&&L.DomUtil.removeClass(this.__locateButton,'leaflet-control-locate-button--disabled'))}}PxMap.LocateControl=c})();